import * as React from 'react';
import { TableComposable, Caption, Thead, Tr, Th, Tbody, Td } from '@patternfly/react-table';

const App = () => {
  const [zVerificationData, setZVerificationData] = React.useState([]);
  const [zCherrypickData, setZCherrypickData] = React.useState([]);
  // fetch API中的GET,默认执行GET
  React.useEffect(() =>{
    fetch('http://localhost:3004/zverification')
      .then((response) => response.json())
      .then((data) => {
        console.log(data);
        setZVerificationData(data);
      })
      .catch((err) => {
        console.log(err.message);
      });
    
    fetch('http://localhost:3004/zcherrypick')
      .then((response) => response.json())
      .then((data) => {
        console.log(data);
        setZCherrypickData(data);
      })
      .catch((err) => {
        console.log(err.message);
      });      
  },[])
/*   const zstreamList = async() => {
    const response = await
    fetch('http://localhost:3000/zverification');
    const data = await response.json();
    console.log(data);
    setZVerificationData(data);
  };
  const zcherrypickList = async() => {
    const response = await
    fetch('http://localhost:3000/zcherrypick');
    const data = await response.json();
    console.log(data);
    setZCherrypickData(data);
  }; */

  const columnNames = {
    url: 'PR_URL',
    title: 'PR_Title',
    lastupdate: 'PR_Last_Update',
    components: 'PR_Components',
    contact: 'PR_QA_Contact'
  }

  return (
    <React.Fragment>
      <TableComposable aria-label='zverification-table' variant='compact' borders='compact'>
        <Caption>z-stream PRs waiting QE Verification</Caption>
        <Thead>
          <Tr>
            <Th>{columnNames.url}</Th>
            <Th>{columnNames.title}</Th>
            <Th>{columnNames.lastupdate}</Th>
            <Th>{columnNames.components}</Th>
            <Th>{columnNames.contact}</Th>
          </Tr>
        </Thead>
        <Tbody>
          {zVerificationData.map(item => (
            <Tr key={item.url}>
              <Td dataLabel={columnNames.url} textCenter>{item.pull_request_URL}</Td>
              <Td dataLabel={columnNames.title} textCenter>{item.pull_request_title}</Td>
              <Td dataLabel={columnNames.lastupdate} textCenter>{item.pull_request_last_update}</Td>
              <Td dataLabel={columnNames.components} textCenter>{item.pull_result_bz_component}</Td>
              <Td dataLabel={columnNames.contact} textCenter>{item.pull_result_bz_qa_contact}</Td>
            </Tr>
          ))}
        </Tbody>
      </TableComposable>

      <TableComposable aria-label='zverification-table' variant='compact' borders='compact'>
        <Caption>z-stream PRs waiting cherry-pick approval</Caption>
        <Thead>
          <Tr>
            <Th>{columnNames.url}</Th>
            <Th>{columnNames.title}</Th>
            <Th>{columnNames.lastupdate}</Th>
            <Th>{columnNames.components}</Th>
            <Th>{columnNames.contact}</Th>
          </Tr>
        </Thead>
        <Tbody>
          {zCherrypickData.map(item => (
            <Tr key={item.url}>
              <Td dataLabel={columnNames.url} textCenter>{item.pull_request_URL}</Td>
              <Td dataLabel={columnNames.title} textCenter>{item.pull_request_title}</Td>
              <Td dataLabel={columnNames.lastupdate} textCenter>{item.pull_request_last_update}</Td>
              <Td dataLabel={columnNames.components} textCenter>{item.pull_result_bz_component}</Td>
              <Td dataLabel={columnNames.contact} textCenter>{item.pull_result_bz_qa_contact}</Td>
            </Tr>
          ))}
        </Tbody>
      </TableComposable>
    </React.Fragment>
  );
};

export default App;